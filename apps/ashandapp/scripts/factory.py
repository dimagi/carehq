from datetime import datetime, timedelta, date
import hashlib
from django.contrib.auth.models import User
import random
import uuid

from ashandapp.models import CareTeam,ProviderRole,ProviderLink, CaregiverLink, CareRelationship
from patient.models import Patient, IdentifierType, PatientIdentifier
from provider.models import Provider


def create_user(username='mockuser', password='demouser', firstname=None, lastname=None):    
    user = User()    
    user.username = username
    # here, we mimic what the django auth system does
    # only we specify the salt to be 12345
    salt = '12345'
    hashed_pass = hashlib.sha1(salt+password).hexdigest()
    user.password = 'sha1$%s$%s' % (salt, hashed_pass)
    
    user.first_name = firstname
    user.last_name=lastname
    user.email = '%s_%s@ashand.com' % (firstname, lastname)
    user.set_password(password)
    user.save()
    return user

def create_provider(firstname, lastname, job_title, affiliation):
    firstclean = firstname.replace("'","")
    lastclean = lastname.replace("'","")
    prov = Provider()
    prov.job_title = job_title
    prov.affiliation = affiliation    
    prov.user = create_user(username=firstclean.lower() + "_" + lastclean.lower(), password='demo', firstname=firstname, lastname = lastname)
    prov.save()
    return prov

def create_or_get_provider_role():
    #set some random role.
    role = ProviderRole.ROLE_CHOICES[random.randint(0, len(ProviderRole.ROLE_CHOICES)-1)][0]

#    try:
#        provider_role = ProviderRole.objects.get(role=role)
#    except:    
#    do we neeed to make this a unique instance per person?
    provider_role = ProviderRole()
    provider_role.role = role 
    provider_role.role_description = "unique instance %s" % (uuid.uuid1().hex)
    provider_role.role_notes = "autogenerated from demo_load"
    provider_role.save()
    return provider_role
    

def create_patient(firstname, middlename, lastname, sex):
    
    firstclean = firstname.replace("'","")
    lastclean = lastname.replace("'","")
    dob = date(random.randint(1955,2008), random.randint(1,12), random.randint(1,28))
        
    pt = Patient()    
    pt.sex = sex
    pt.dob = dob
    
    pt.user = create_user(username=firstclean.lower() + "_" + lastclean.lower(), password='demo', firstname=firstname, lastname=lastname)
    
    pt.is_primary = True
    pt.save()    
    return pt


def set_random_identifiers(patient):
    for ident in IdentifierType.objects.all():
        if random.random() < 0.33:
            #set some arbitrary somewhat random threshold to skip
            continue
        new_id = PatientIdentifier()
        new_id.id_type = ident
        new_id.patient = patient
        new_id.id_value = uuid.uuid1().hex
        new_id.save()
