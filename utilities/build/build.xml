

<project name="ashand_build" default="compile">

		
	<property name="project.dir" value="../../"/>
	<property name="apps.dir" value="../../apps"/>	
	<property name="pydoc.dir" value="../../docs"/>
	<property name="libs.dir" value="../../lib" />
	<property name="deployment.dir" value="../deployment" />
	<property name="rapidsms.dir" value="../../rapidsms" />
	
	<property name="antdepends.dir" value="../../utilities/build" />
	<property name="postdeploy.dir" value="../../tests/deployment" />
	
	
	<taskdef resource="pyAntTasks.properties" classpath="${antdepends.dir}/pyAntTasks-1.3.jar"/>
	<taskdef name="py-run" classname="org.pyant.tasks.PythonRunTask" classpath="${antdepends.dir}/pyAntTasks-1.3.jar"/>
	<taskdef name="py-compile" classname="org.pyant.tasks.PythonCompileTask" classpath="${antdepends.dir}/pyAntTasks-1.3.jar"/>
	<taskdef name="py-test" classname="org.pyant.tasks.PythonTestTask" classpath="${antdepends.dir}/pyAntTasks-1.3.jar"/>
	<taskdef name="py-doc" classname="org.pyant.tasks.PythonDocTask" classpath="${antdepends.dir}/pyAntTasks-1.3.jar"/>
	
	<target name="init">
		<mkdir dir="${pydoc.dir}"/>
	</target>
	
	<!--
		    Clean out any compiled code or files generated by the build.
	-->
	<target name="clean" depends="init">
		<delete>
			<fileset dir="${rapidsms.dir}">
		    	<include name="**/*.pyc"/>
		        <include name="**/*.pyo"/>
			</fileset>			
			<fileset dir="${project.dir}">
		    	<include name="**/*.pyc"/>
		        <include name="**/*.pyo"/>
		    </fileset>
			<fileset dir="${apps.dir}">
				<include name="**/*.pyc"/>
				<include name="**/*.pyo"/>
			</fileset>
			<fileset dir="${libs.dir}">
				<include name="**/*.pyc"/>
				<include name="**/*.pyo"/>
			</fileset>
			<fileset dir="${deployment.dir}">
				<include name="**/*.pyc"/>
				<include name="**/*.pyo"/>
			</fileset>
		    <fileset dir="${pydoc.dir}">
		    	<include name="**/*"/>
			</fileset>
		</delete>
	</target>

	
	<target name="compile">
		<!--
		Something is messed up with the compile task, commenting out until further notice.
		-->
		<py-compile dir="${apps.dir}" pythonpath="${apps.dir}" optimize="0"/>
		<py-compile dir="${libs.dir}" pythonpath="${libs.dir}" optimize="0"/>
		<py-compile dir="${deployment.dir}" pythonpath="${scripts.dir}" optimize="0"/>		
		<py-compile dir="${project.dir}" pythonpath="${project.dir}" optimize="0" quiet="false"/>
						
	</target>	

	<!--
		Execute Non Django Python unit tests.
		This will treat any files under src/ that end in Test.py as a Python
		unit test module.
	-->
	<target name="libtests" depends="compile">
		<!--
		<py-test pythonpath="${project.dir}" dir="${project.dir}">
			<fileset dir="${libs.dir}">
				<include name="**/*Test.py"/>
			</fileset>
		</py-test> 
		-->		
	</target>	

	
	<target name="django-tests-all" depends="compile">	
		<py-run script="${project.dir}/djmanage.py" pythonpath="${project.dir}" optimize="0">
			<arg value="test" />
		</py-run>
		
	</target> 
	
	<!-- Note, this is extremely dangerous for running on your own environment -->
	<target name="reset_db" depends="compile,django-tests-all">
		<py-run script="${project.dir}/djmanage.py" pythonpath="${project.dir}">
			<arg value="reset_db" />
			<arg value="--noinput" />
		</py-run>		
		<py-run script="${project.dir}/djmanage.py" pythonpath="${project.dir}">
			<arg value="syncdb" />
			<arg value="--noinput" />
		</py-run>
	</target>
	
	<target name="bootstrap_build" depends="reset_db">
			<py-run script="${project.dir}/djmanage.py" pythonpath="${project.dir}">
				<arg value="runscript" />
				<arg value="utilities.bootstrap_database" />
			</py-run>		
			<py-run script="${project.dir}/djmanage.py" pythonpath="${project.dir}">
				<arg value="runscript" />
				<arg value="utilities.generate_cases" />
			</py-run>
			<py-run script="${project.dir}/djmanage.py" pythonpath="${project.dir}">
				<arg value="loaddata" />
				<arg value="build-example_filters.json" />
			</py-run>
	</target>
	
	
	<target name="build_demo" depends="reset_db">
				<py-run script="${project.dir}/djmanage.py" pythonpath="${project.dir}">
					<arg value="runscript" />
					<arg value="ashandapp.scripts.demo_load" />
				</py-run>
		</target>
	
	<target name="syncdb" depends="compile,django-tests-all,setstatic">
			<py-run script="${project.dir}/djmanage.py" pythonpath="${project.dir}">
				<arg value="syncdb" />
				<arg value="--noinput" />
			</py-run>		
	</target>
	
	<target name="setstatic" depends="">
		<py-run script="${project.dir}/djmanage.py" pythonpath="${project.dir}">
			<arg value="runscript" />
			<arg value="utilities.setapache_static" />
		</py-run>		
	</target>
	
		
	<target name="pydoc" depends="init,compile">
		<py-doc pythonpath="${project.dir}" destdir="${pydoc.dir}">
			<fileset dir="${project.dir}">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${apps.dir}">
				<include name="**/*"/>
			</fileset>
		</py-doc>
	</target>		
	 
</project>





	