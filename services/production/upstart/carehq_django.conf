# Upstart django script
# this script will start/stop the django server running via a management command
# In Ubuntu, symlink this script to /etc/init/
description "start and stop the carehq django project"

start on started couchdb
# configuration variables.
# You'll want to change these as needed
env PROJECT_NAME=carehq
env DJANGO_HOME=/opt/carehq_project/src/carehq #where manage.py is
env DJANGO_PORT=8001
env DJANGO_HOST=0.0.0.0 # bind to 0.0.0.0 or other port where needed
env DJANGO_VIRTUALENV=/home/pact/.virtualenvs/carehq/
env PROJECT_USER=pact
env LOG_PATH=/opt/carehq_project/log/carehq_upstart.log
env SSL_CERTIFICATE=/opt/carehq_project/ssl/pact-cert.pem
env SSL_PRIVATE_KEY=/opt/carehq_project/ssl/pact-key.pem
env SSL_CERTIFICATE_CHAIN=/opt/carehq_project/ssl/dimagi-cacert.pem

expect fork

pre-start script
        chdir $DJANGO_HOME
end script

script
        # Note, we're using the virtualenv's python interpreter.  Calling source/workon doesn't work here, so just call the ENV's executable instead.
        exec sudo -u $PROJECT_USER $DJANGO_VIRTUALENV/bin/python $DJANGO_HOME/manage.py runcpserver \
        host=$DJANGO_HOST \
        port=$DJANGO_PORT \
        ssl_certificate=$SSL_CERTIFICATE \
        ssl_private_key=$SSL_PRIVATE_KEY \
        ssl_certificate_chain=$SSL_CERTIFICATE_CHAIN > $LOG_PATH &
        # the & tells upstart we're creating a daemon upstart manages PID creation for you.
end script